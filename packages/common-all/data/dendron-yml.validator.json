{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/ConfigForSchemaGenerator",
  "definitions": {
    "ConfigForSchemaGenerator": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": "number",
          "enum": [4, 5]
        },
        "dev": {
          "$ref": "#/definitions/DendronDevConfig",
          "description": "Development related options"
        },
        "site": {
          "$ref": "#/definitions/DendronSiteConfig",
          "description": "Configuration related to publishing notes"
        },
        "useFMTitle": {
          "type": "boolean",
          "description": "Use the title from frontmatter"
        },
        "useKatex": {
          "type": "boolean",
          "description": "Use katex for rendering math default: true"
        },
        "mermaid": {
          "type": "boolean",
          "description": "Enable mermaid diagram sytnax"
        },
        "useNoteTitleForLink": {
          "type": "boolean",
          "description": "If true, use the note title when displaying naked links"
        },
        "hierarchyDisplay": {
          "type": "boolean",
          "description": "Should show hierarchy"
        },
        "hierarchyDisplayTitle": {
          "type": "string",
          "description": "Title used for hiearchies Default: Children"
        },
        "commands": {
          "$ref": "#/definitions/DendronCommandConfig"
        },
        "workspace": {
          "$ref": "#/definitions/DendronWorkspaceConfig"
        },
        "preview": {
          "$ref": "#/definitions/DendronPreviewConfig"
        },
        "publishing": {
          "$ref": "#/definitions/DendronPublishingConfig"
        }
      },
      "required": ["version"]
    },
    "DendronDevConfig": {
      "type": "object",
      "properties": {
        "nextServerUrl": {
          "type": "string",
          "description": "Custom next server"
        },
        "nextStaticRoot": {
          "type": "string",
          "description": "Static assets for next"
        },
        "engineServerPort": {
          "type": "number",
          "description": "What port to use for engine server. Default behavior is to create at startup"
        },
        "enableLinkCandidates": {
          "type": "boolean",
          "description": "Enable displaying and indexing link candidates. Default is false"
        },
        "enablePreviewV2": {
          "type": "boolean",
          "description": "Enable new preview as default"
        },
        "forceWatcherType": {
          "type": "string",
          "enum": ["plugin", "engine"],
          "description": "Force the use of a specific type of watcher.\n\n- plugin: Uses VSCode's builtin watcher\n- engine: Uses the engine watcher, watching the files directly without VSCode"
        },
        "enableExportPodV2": {
          "type": "boolean",
          "description": "Enable export pod v2"
        },
        "enableSelfContainedVaults": {
          "type": "boolean",
          "description": "Sets self contained vaults as the default vault type. Dendron can read self-contained vaults even if this option is not enabled, but it will only create self contained vaults if this option is enabled."
        },
        "enableExperimentalIFrameNoteRef": {
          "type": "boolean",
          "description": "Feature flag for iframe note references. True -> renders note references as an iframe when publishing to nextjs. False (Default) -> renders note references inline."
        },
        "enableEngineV3": {
          "type": "boolean",
          "description": "Enable engine v3"
        }
      },
      "additionalProperties": false,
      "description": "Namespace for all dev configurations.\n\nThis is a namespace for all feature configs that are experimental. Keep this as flat as possible unless you know in advance what the config namespace will look like once it goes out of beta."
    },
    "DendronSiteConfig": {
      "type": "object",
      "properties": {
        "assetsPrefix": {
          "type": "string",
          "description": "If set, add prefix to all asset links"
        },
        "canonicalBaseUrl": {
          "type": "string",
          "description": "Use this as root for creating canonical url for sites"
        },
        "copyAssets": {
          "type": "boolean",
          "description": "Copy assets from vault to site. Default: true"
        },
        "customHeaderPath": {
          "type": "string",
          "description": "If set, path to a custom header to include in published sites"
        },
        "ga_tracking": {
          "type": "string",
          "description": "If set, use google analytics to track users"
        },
        "siteFaviconPath": {
          "type": "string",
          "description": "Path to favicon. Relative to workspace. Default: \"favicon.ico\""
        },
        "logo": {
          "type": "string",
          "description": "Path to site logo"
        },
        "siteIndex": {
          "type": "string",
          "description": "By default, the domain of your `siteHierarchies` page"
        },
        "siteHierarchies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hierarchies to publish"
        },
        "siteLastModified": {
          "type": "boolean",
          "description": "If true, show a last modified on the site"
        },
        "siteRootDir": {
          "type": "string",
          "description": "Where your site will be published. Relative to Dendron workspace"
        },
        "siteRepoDir": {
          "type": "string",
          "description": "Location of the github repo where your site notes are located. By default, this is assumed to be your `workspaceRoot` if not set."
        },
        "siteNotesDir": {
          "type": "string",
          "description": "Folder where your notes will be kept. By default, \"notes\""
        },
        "siteUrl": {
          "type": "string",
          "description": "Url of site without trailing slash eg. dendron.so"
        },
        "githubCname": {
          "type": "string",
          "description": "Cname used for github pages\n- default: none"
        },
        "gh_edit_link": {
          "type": "string",
          "description": "If set, add edit on github to this site\""
        },
        "gh_edit_link_text": {
          "type": "string"
        },
        "gh_edit_branch": {
          "type": "string"
        },
        "gh_edit_view_mode": {
          "type": "string",
          "enum": ["tree", "edit"]
        },
        "gh_edit_repository": {
          "type": "string"
        },
        "usePrettyRefs": {
          "type": "boolean",
          "description": "Pretty refs help you identify when content is embedded from elsewhere and provide links back to the source"
        },
        "hideBlockAnchors": {
          "type": "boolean"
        },
        "showFrontMatterTags": {
          "type": "boolean",
          "description": "Whether frontmatter tags should be rendered in published websites. Defaults to true."
        },
        "noRandomlyColoredTags": {
          "type": "boolean",
          "description": "Do not display the randomly generated colors for tags. Only color tag links if it has been configured in the frontmatter. False by default."
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LegacyHierarchyConfig"
          },
          "description": "Control publication on a per hierarchy basis"
        },
        "duplicateNoteBehavior": {
          "$ref": "#/definitions/LegacyDuplicateNoteBehavior",
          "description": "When publishing in multi-vault scenario, how to handle duplicate notes"
        },
        "writeStubs": {
          "type": "boolean",
          "description": "When publishing, should stubs be written to disk? Default: true NOTE: if this isn't set to true, will cause stub notes to be published with different ids each time"
        },
        "title": {
          "type": "string",
          "description": "SEO related values"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "image": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "alt": {
              "type": "string"
            }
          },
          "required": ["url", "alt"],
          "additionalProperties": false,
          "description": "Default SEO image for published pages"
        },
        "useContainers": {
          "type": "boolean",
          "description": "Use  {@link  https://github.com/Nevenall/remark-containers }  in published site"
        },
        "generateChangelog": {
          "type": "boolean",
          "description": "Generate changelog for published site Default: false"
        },
        "previewPort": {
          "type": "boolean",
          "description": "Set alternate port for preview Default: 8080"
        },
        "segmentKey": {
          "type": "string",
          "description": "If set, value of your segment key"
        },
        "cognitoUserPoolId": {
          "type": "string",
          "description": "Required for auth"
        },
        "cognitoClientId": {
          "type": "string"
        },
        "usePrettyLinks": {
          "type": "boolean",
          "description": "notes are published without the .html file extension"
        },
        "useHashesForFMTags": {
          "type": "boolean",
          "description": "Display a `#` symbol in front of frontmatter tags in the tags listing. False by default."
        }
      },
      "required": ["siteHierarchies", "siteRootDir"],
      "additionalProperties": false
    },
    "LegacyHierarchyConfig": {
      "type": "object",
      "properties": {
        "publishByDefault": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          ]
        },
        "noindexByDefault": {
          "type": "boolean"
        },
        "customFrontmatter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyCustomFMEntry"
          }
        }
      },
      "additionalProperties": false
    },
    "LegacyCustomFMEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {}
      },
      "required": ["key", "value"],
      "additionalProperties": false
    },
    "LegacyDuplicateNoteBehavior": {
      "$ref": "#/definitions/LegacyUseVaultBehavior"
    },
    "LegacyUseVaultBehavior": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/LegacyDuplicateNoteAction"
        },
        "payload": {
          "$ref": "#/definitions/LegacyUseVaultBehaviorPayload"
        }
      },
      "required": ["action", "payload"],
      "additionalProperties": false
    },
    "LegacyDuplicateNoteAction": {
      "type": "string",
      "const": "useVault"
    },
    "LegacyUseVaultBehaviorPayload": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "vault": {
              "$ref": "#/definitions/DVault"
            }
          },
          "required": ["vault"],
          "additionalProperties": false
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "DVault": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of vault"
        },
        "visibility": {
          "$ref": "#/definitions/DVaultVisibility"
        },
        "fsPath": {
          "type": "string",
          "description": "Filesystem path to vault"
        },
        "workspace": {
          "type": "string",
          "description": "Indicate the workspace that this vault is part of"
        },
        "remote": {
          "$ref": "#/definitions/RemoteEndpoint"
        },
        "userPermission": {
          "$ref": "#/definitions/DPermission"
        },
        "noAutoPush": {
          "type": "boolean",
          "description": "If this is enabled, don't apply workspace push commands"
        },
        "sync": {
          "$ref": "#/definitions/DVaultSync",
          "description": "How the vault should be handled when using \"add and commit\" and \"sync\" commands.\n\nOptions are:\n* skip: Skip them entirely. You must manage the repository manually.\n* noPush: Commit any changes and pull updates, but don't push. You can watch the repository and make local changes without sharing them back.\n* noCommit: Pull and push updates if the workspace is clean, but don't commit. You manually commit your local changes, but automatically share them once you committed.\n* sync: Commit changes, and pull and push updates. Treats workspace vaults like regular vaults.\n\nThis setting overrides the `workspaceVaultSync` setting for the vault, even if the vault is a workspace vault.\n\nDefaults to `sync`."
        },
        "seed": {
          "type": "string",
          "description": "Id of a seed this vault belongs to"
        },
        "selfContained": {
          "type": "boolean",
          "description": "Marks the vault as a self-contained vault. This is (hopefully) temporary until we eventually drop support for non-self contained vaults."
        },
        "siteUrl": {
          "type": "string",
          "description": "Published URL endpoint for the vault. When wikilinks are exported from this vault, they will be converted with url defined here"
        },
        "siteIndex": {
          "type": "string",
          "description": "Index page for the vault"
        }
      },
      "required": ["fsPath"],
      "additionalProperties": false
    },
    "DVaultVisibility": {
      "type": "string",
      "const": "private"
    },
    "RemoteEndpoint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "git"
        },
        "url": {
          "type": "string"
        }
      },
      "required": ["type", "url"],
      "additionalProperties": false
    },
    "DPermission": {
      "type": "object",
      "properties": {
        "read": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "write": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["read", "write"],
      "additionalProperties": false
    },
    "DVaultSync": {
      "type": "string",
      "enum": ["skip", "noPush", "noCommit", "sync"]
    },
    "DendronCommandConfig": {
      "type": "object",
      "properties": {
        "lookup": {
          "$ref": "#/definitions/LookupConfig"
        },
        "randomNote": {
          "$ref": "#/definitions/RandomNoteConfig"
        },
        "insertNoteLink": {
          "$ref": "#/definitions/InsertNoteLinkConfig"
        },
        "insertNoteIndex": {
          "$ref": "#/definitions/InsertNoteIndexConfig"
        },
        "copyNoteLink": {
          "$ref": "#/definitions/CopyNoteLinkConfig"
        },
        "templateHierarchy": {
          "type": "string",
          "description": "Default template hiearchy used when running commands like `Apply template`"
        }
      },
      "required": [
        "lookup",
        "randomNote",
        "insertNoteLink",
        "insertNoteIndex",
        "copyNoteLink"
      ],
      "additionalProperties": false,
      "description": "Namespace for all command related configurations"
    },
    "LookupConfig": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/NoteLookupConfig"
        }
      },
      "required": ["note"],
      "additionalProperties": false,
      "description": "Namespace for configuring lookup commands"
    },
    "NoteLookupConfig": {
      "type": "object",
      "properties": {
        "selectionMode": {
          "$ref": "#/definitions/LookupSelectionMode"
        },
        "vaultSelectionModeOnCreate": {
          "$ref": "#/definitions/LookupSelectVaultModeOnCreate"
        },
        "confirmVaultOnCreate": {
          "type": "boolean"
        },
        "leaveTrace": {
          "type": "boolean"
        },
        "bubbleUpCreateNew": {
          "type": "boolean"
        },
        "fuzzThreshold": {
          "type": "number"
        }
      },
      "required": [
        "selectionMode",
        "vaultSelectionModeOnCreate",
        "confirmVaultOnCreate",
        "leaveTrace",
        "bubbleUpCreateNew",
        "fuzzThreshold"
      ],
      "additionalProperties": false,
      "description": "Namespace for configuring  {@link  NoteLookupCommand }"
    },
    "LookupSelectionMode": {
      "type": "string",
      "enum": ["extract", "link", "none"],
      "description": "String literal type generated from  {@link  NoteLookupSelectionBehaviorEnum }"
    },
    "LookupSelectVaultModeOnCreate": {
      "type": "string",
      "enum": ["smart", "alwaysPrompt"]
    },
    "RandomNoteConfig": {
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "description": "Namespace for configuring  {@link  RandomNoteCommand }"
    },
    "InsertNoteLinkConfig": {
      "type": "object",
      "properties": {
        "aliasMode": {
          "$ref": "#/definitions/InsertNoteLinkAliasModeEnum"
        },
        "enableMultiSelect": {
          "type": "boolean"
        }
      },
      "required": ["aliasMode", "enableMultiSelect"],
      "additionalProperties": false,
      "description": "Namespace for configuring  {@link  InsertNoteLinkCommand }"
    },
    "InsertNoteLinkAliasModeEnum": {
      "type": "string",
      "enum": ["snippet", "selection", "title", "prompt", "none"],
      "description": "Enum definitions of possible alias mode values"
    },
    "InsertNoteIndexConfig": {
      "type": "object",
      "properties": {
        "enableMarker": {
          "type": "boolean"
        }
      },
      "required": ["enableMarker"],
      "additionalProperties": false,
      "description": "Namespace for configuring  {@link  InsertNoteIndexCommand }"
    },
    "CopyNoteLinkConfig": {
      "type": "object",
      "properties": {
        "nonNoteFile": {
          "type": "object",
          "properties": {
            "anchorType": {
              "$ref": "#/definitions/NonNoteFileLinkAnchorType"
            }
          },
          "additionalProperties": false
        },
        "aliasMode": {
          "type": "string",
          "enum": ["none", "title"]
        }
      },
      "required": ["aliasMode"],
      "additionalProperties": false,
      "description": "Namespace for configuring  {@link  CopyNoteLinkCommand }"
    },
    "NonNoteFileLinkAnchorType": {
      "type": "string",
      "enum": ["line", "block", "prompt"],
      "description": "\"line\" uses line numbers (`L23`), \"block\" inserts block anchors (`^xf1g...`). \"prompt\" means prompt the user to select one."
    },
    "DendronWorkspaceConfig": {
      "type": "object",
      "properties": {
        "dendronVersion": {
          "type": "string"
        },
        "workspaces": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/DendronWorkspaceEntry"
              },
              {
                "not": {}
              }
            ]
          }
        },
        "seeds": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/DendronSeedEntry"
              },
              {
                "not": {}
              }
            ]
          }
        },
        "vaults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DVault"
          }
        },
        "hooks": {
          "$ref": "#/definitions/DHookDict"
        },
        "journal": {
          "$ref": "#/definitions/JournalConfig"
        },
        "scratch": {
          "$ref": "#/definitions/ScratchConfig"
        },
        "task": {
          "$ref": "#/definitions/TaskConfig"
        },
        "graph": {
          "$ref": "#/definitions/DendronGraphConfig"
        },
        "disableTelemetry": {
          "type": "boolean"
        },
        "enableAutoCreateOnDefinition": {
          "type": "boolean"
        },
        "enableXVaultWikiLink": {
          "type": "boolean"
        },
        "enableRemoteVaultInit": {
          "type": "boolean"
        },
        "workspaceVaultSyncMode": {
          "$ref": "#/definitions/VaultSyncMode"
        },
        "enableAutoFoldFrontmatter": {
          "type": "boolean"
        },
        "enableUserTags": {
          "type": "boolean"
        },
        "enableHashTags": {
          "type": "boolean"
        },
        "enableFullHierarchyNoteTitle": {
          "type": "boolean"
        },
        "maxPreviewsCached": {
          "type": "number"
        },
        "maxNoteLength": {
          "type": "number"
        },
        "enableEditorDecorations": {
          "type": "boolean"
        },
        "feedback": {
          "type": "boolean"
        },
        "apiEndpoint": {
          "type": "string"
        },
        "metadataStore": {
          "type": "string",
          "enum": ["sqlite", "json"]
        }
      },
      "required": [
        "vaults",
        "journal",
        "scratch",
        "task",
        "graph",
        "enableAutoCreateOnDefinition",
        "enableXVaultWikiLink",
        "enableRemoteVaultInit",
        "workspaceVaultSyncMode",
        "enableAutoFoldFrontmatter",
        "enableUserTags",
        "enableHashTags",
        "enableFullHierarchyNoteTitle",
        "maxPreviewsCached",
        "maxNoteLength",
        "enableEditorDecorations"
      ],
      "additionalProperties": false,
      "description": "Namespace for configurations that affect the workspace"
    },
    "DendronWorkspaceEntry": {
      "type": "object",
      "properties": {
        "remote": {
          "$ref": "#/definitions/RemoteEndpoint"
        }
      },
      "required": ["remote"],
      "additionalProperties": false
    },
    "DendronSeedEntry": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/SeedSite"
        }
      },
      "additionalProperties": false
    },
    "SeedSite": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "index": {
          "type": "string"
        }
      },
      "required": ["url"],
      "additionalProperties": false
    },
    "DHookDict": {
      "type": "object",
      "properties": {
        "onCreate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DHookEntry"
          }
        }
      },
      "required": ["onCreate"],
      "additionalProperties": false
    },
    "DHookEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "const": "js"
        }
      },
      "required": ["id", "pattern", "type"],
      "additionalProperties": false
    },
    "JournalConfig": {
      "type": "object",
      "properties": {
        "dailyDomain": {
          "type": "string"
        },
        "dailyVault": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dateFormat": {
          "type": "string"
        },
        "addBehavior": {
          "$ref": "#/definitions/NoteAddBehaviorEnum"
        }
      },
      "required": ["dailyDomain", "name", "dateFormat", "addBehavior"],
      "additionalProperties": false,
      "description": "Namespace for configuring journal note behavior"
    },
    "NoteAddBehaviorEnum": {
      "type": "string",
      "enum": [
        "childOfDomain",
        "childOfDomainNamespace",
        "childOfCurrent",
        "asOwnDomain"
      ],
      "description": "Enum definition of possible note add behavior values."
    },
    "ScratchConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "dateFormat": {
          "type": "string"
        },
        "addBehavior": {
          "$ref": "#/definitions/NoteAddBehaviorEnum"
        }
      },
      "required": ["name", "dateFormat", "addBehavior"],
      "additionalProperties": false,
      "description": "Namespace for configuring scratch note behavior"
    },
    "TaskConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "statusSymbols": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps each status to a symbol, word, or sentence. This will be displayed for the task."
        },
        "taskCompleteStatus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Sets which statuses mark the task as completed."
        },
        "prioritySymbols": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps each priority to a symbol, word, or sentence. This will be displayed for the task."
        },
        "todoIntegration": {
          "type": "boolean",
          "description": "Add a \"TODO: <note title>\" entry to the frontmatter of task notes. This can simplify integration with various Todo extensions like Todo Tree."
        },
        "createTaskSelectionType": {
          "$ref": "#/definitions/LegacyLookupSelectionType",
          "description": "The default selection type to use in Create Task Note command."
        },
        "name": {
          "type": "string"
        },
        "dateFormat": {
          "type": "string"
        },
        "addBehavior": {
          "$ref": "#/definitions/NoteAddBehaviorEnum"
        }
      },
      "required": [
        "addBehavior",
        "createTaskSelectionType",
        "dateFormat",
        "name",
        "prioritySymbols",
        "statusSymbols",
        "taskCompleteStatus",
        "todoIntegration"
      ],
      "description": "Namespace for configuring scratch note behavior"
    },
    "LegacyLookupSelectionType": {
      "type": "string",
      "enum": ["selection2link", "selectionExtract", "none"]
    },
    "DendronGraphConfig": {
      "type": "object",
      "properties": {
        "zoomSpeed": {
          "type": "number"
        },
        "createStub": {
          "type": "boolean",
          "description": "If true, create a note if it hasn't been created already when clicked on a graph node"
        }
      },
      "required": ["zoomSpeed", "createStub"],
      "additionalProperties": false,
      "description": "Namespace for all graph related configurations."
    },
    "VaultSyncMode": {
      "type": "string",
      "enum": ["skip", "noPush", "noCommit", "sync"]
    },
    "DendronPreviewConfig": {
      "type": "object",
      "properties": {
        "enableFMTitle": {
          "type": "boolean"
        },
        "enableNoteTitleForLink": {
          "type": "boolean"
        },
        "enableFrontmatterTags": {
          "type": "boolean"
        },
        "enableHashesForFMTags": {
          "type": "boolean"
        },
        "enablePrettyRefs": {
          "type": "boolean"
        },
        "enableKatex": {
          "type": "boolean"
        },
        "automaticallyShowPreview": {
          "type": "boolean"
        },
        "theme": {
          "$ref": "#/definitions/Theme"
        }
      },
      "required": [
        "enableFMTitle",
        "enableNoteTitleForLink",
        "enableFrontmatterTags",
        "enableHashesForFMTags",
        "enablePrettyRefs",
        "enableKatex",
        "automaticallyShowPreview"
      ],
      "additionalProperties": false,
      "description": "Namespace for all preview related configurations"
    },
    "Theme": {
      "type": "string",
      "enum": ["dark", "light", "custom"]
    },
    "DendronPublishingConfig": {
      "type": "object",
      "properties": {
        "enableFMTitle": {
          "type": "boolean"
        },
        "enableHierarchyDisplay": {
          "type": "boolean"
        },
        "hierarchyDisplayTitle": {
          "type": "string"
        },
        "enableNoteTitleForLink": {
          "type": "boolean"
        },
        "enablePrettyRefs": {
          "type": "boolean"
        },
        "enableBackLinks": {
          "type": "boolean"
        },
        "enableKatex": {
          "type": "boolean"
        },
        "assetsPrefix": {
          "type": "string"
        },
        "copyAssets": {
          "type": "boolean"
        },
        "canonicalBaseUrl": {
          "type": "string"
        },
        "customHeaderPath": {
          "type": "string"
        },
        "ga": {
          "$ref": "#/definitions/GoogleAnalyticsConfig"
        },
        "logoPath": {
          "type": "string"
        },
        "siteFaviconPath": {
          "type": "string"
        },
        "siteIndex": {
          "type": "string"
        },
        "siteHierarchies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableSiteLastModified": {
          "type": "boolean"
        },
        "siteRootDir": {
          "type": "string"
        },
        "siteUrl": {
          "type": "string"
        },
        "enableFrontmatterTags": {
          "type": "boolean"
        },
        "enableHashesForFMTags": {
          "type": "boolean"
        },
        "enableRandomlyColoredTags": {
          "type": "boolean"
        },
        "enableTaskNotes": {
          "type": "boolean"
        },
        "hierarchy": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/HierarchyConfig"
          }
        },
        "duplicateNoteBehavior": {
          "$ref": "#/definitions/DuplicateNoteBehavior"
        },
        "writeStubs": {
          "type": "boolean"
        },
        "seo": {
          "$ref": "#/definitions/SEOConfig"
        },
        "github": {
          "$ref": "#/definitions/GithubConfig"
        },
        "theme": {
          "$ref": "#/definitions/Theme"
        },
        "segmentKey": {
          "type": "string"
        },
        "cognitoUserPoolId": {
          "type": "string"
        },
        "cognitoClientId": {
          "type": "string"
        },
        "enablePrettyLinks": {
          "type": "boolean"
        },
        "siteBanner": {
          "type": "string"
        },
        "giscus": {
          "$ref": "#/definitions/GiscusConfig"
        },
        "sidebarPath": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean",
              "const": false
            }
          ]
        },
        "searchMode": {
          "$ref": "#/definitions/SearchMode"
        }
      },
      "required": [
        "copyAssets",
        "siteHierarchies",
        "enableSiteLastModified",
        "siteRootDir",
        "enableFrontmatterTags",
        "enableHashesForFMTags",
        "writeStubs",
        "seo",
        "github",
        "enablePrettyLinks"
      ],
      "additionalProperties": false,
      "description": "Namespace for all publishing related configurations"
    },
    "GoogleAnalyticsConfig": {
      "type": "object",
      "properties": {
        "tracking": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HierarchyConfig": {
      "type": "object",
      "properties": {
        "publishByDefault": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          ]
        },
        "customFrontmatter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFMEntry"
          }
        }
      },
      "additionalProperties": false
    },
    "CustomFMEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {}
      },
      "required": ["key", "value"],
      "additionalProperties": false
    },
    "DuplicateNoteBehavior": {
      "$ref": "#/definitions/UseVaultBehavior"
    },
    "UseVaultBehavior": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/DuplicateNoteAction"
        },
        "payload": {
          "$ref": "#/definitions/DuplicateNoteActionPayload"
        }
      },
      "required": ["action", "payload"],
      "additionalProperties": false
    },
    "DuplicateNoteAction": {
      "type": "string",
      "const": "useVault"
    },
    "DuplicateNoteActionPayload": {
      "$ref": "#/definitions/UseVaultBehaviorPayload"
    },
    "UseVaultBehaviorPayload": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "vault": {
              "$ref": "#/definitions/DVault"
            }
          },
          "required": ["vault"],
          "additionalProperties": false
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "SEOConfig": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/SEOImage"
        }
      },
      "additionalProperties": false,
      "description": "Namespace for SEO related site configurations."
    },
    "SEOImage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      },
      "required": ["url", "alt"],
      "additionalProperties": false
    },
    "GithubConfig": {
      "type": "object",
      "properties": {
        "cname": {
          "type": "string"
        },
        "enableEditLink": {
          "type": "boolean"
        },
        "editLinkText": {
          "type": "string"
        },
        "editBranch": {
          "type": "string"
        },
        "editViewMode": {
          "$ref": "#/definitions/GithubEditViewMode"
        },
        "editRepository": {
          "type": "string"
        }
      },
      "required": ["enableEditLink"],
      "additionalProperties": false,
      "description": "Namespace for publishing related github configs"
    },
    "GithubEditViewMode": {
      "type": "string",
      "enum": ["tree", "edit"]
    },
    "GiscusConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "repo": {
          "type": "string"
        },
        "repoId": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "mapping": {
          "type": "string",
          "enum": ["url", "title", "og:title", "specific", "number", "pathname"]
        },
        "term": {
          "type": "string"
        },
        "theme": {
          "type": "string",
          "enum": [
            "light",
            "light_high_contrast",
            "light_protanopia",
            "light_tritanopia",
            "dark",
            "dark_high_contrast",
            "dark_protanopia",
            "dark_tritanopia",
            "dark_dimmed",
            "transparent_dark",
            "preferred_color_scheme"
          ]
        },
        "strict": {
          "type": "string",
          "enum": ["0", "1"]
        },
        "reactionsEnabled": {
          "type": "string",
          "enum": ["0", "1"]
        },
        "emitMetadata": {
          "type": "string",
          "enum": ["0", "1"]
        },
        "inputPosition": {
          "type": "string",
          "enum": ["top", "bottom"]
        },
        "lang": {
          "type": "string",
          "enum": [
            "de",
            "gsw",
            "en",
            "es",
            "fr",
            "id",
            "it",
            "ja",
            "ko",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "tr",
            "vi",
            "zh-CN",
            "zh-TW"
          ]
        },
        "loading": {
          "type": "string",
          "enum": ["lazy", "eager"]
        }
      },
      "required": ["repo", "repoId", "mapping"],
      "additionalProperties": false
    },
    "SearchMode": {
      "type": "string",
      "enum": ["search", "lookup"]
    }
  }
}
