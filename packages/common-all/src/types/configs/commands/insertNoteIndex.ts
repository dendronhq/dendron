import { DendronConfigEntry } from "../base";

/**
 * Namespace for configuring {@link InsertNoteIndexCommand}
 */
export type InsertNoteIndexConfig = {
  marker?: boolean;
};

/**
 * Given a boolean value, returns a {@link DendronConfigEntry} that holds
 * user friendly description of the marker behavior.
 *
 * This is a function instead of an object because object keys cannot be booleans.
 *
 * @param value boolean
 * @returns DendronConfigEntry<boolean>
 */
const MARKER = (value: boolean): DendronConfigEntry<boolean> => {
  const valueToString = value ? "Include" : "Exclude";
  return {
    value,
    label: `${valueToString} marker.`,
    desc: `${valueToString} autogenerated markers between note index when inserting.`,
  };
};

/**
 * Constants / functions that produce constants for
 * possible insert note index configurations.
 */
export const INSERT_NOTE_INDEX = {
  MARKER,
};

/**
 * Generates default {@link InsertNoteIndexConfig}
 * @returns InsertNoteIndexConfig
 */
export function genDefaultInsertNoteIndexConfig(): InsertNoteIndexConfig {
  return {
    marker: false,
  };
}
