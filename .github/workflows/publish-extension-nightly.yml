# This workflow will build the plugin vsix every week night at 12:00 AM PST and
# publish it to the VS Code Marketplace under the 'nightly' extension target.
# This will NOT publish any packages to NPM.
name: Publish Extension - Nightly

# See documentation on POSIX cron syntax here: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events
# Scheduled to run every weekday at 12:00 AM PST, which is 7:00 AM UTC Tuesday-Saturday
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 7 * * 2-6'

jobs:
  build:
    environment: plugin-production

    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - name: Gather environment data
        run: |
          node --version
          npm --version
          yarn --version

      - name: Configure Git user
        run: |
          git config --global user.name github.actions
          git config --global user.email github-actions@github.com

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version:  14.x

      - name: Yarn Setup
        run: yarn setup

      - name: Set Up Yarn Local Registry
        run: yarn config set registry http://localhost:4873

      - name: Set Up NPM Local Registry
        run: |
          npm set registry http://localhost:4873/

      - name: Set Environment Variables
        run: |
          echo "DENDRON_RELEASE_VERSION=`cat meta.json | jq -r '.["@dendronhq/plugin-core"]' | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{$NF=sprintf("%0*d", length($NF), ($NF+1)); print}'`" >> $GITHUB_ENV
          echo "GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}" >> $GITHUB_ENV
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV

      - name: Clear Verdaccio Cache
        run: |
          if [ -d ~/.config/verdaccio/storage/@dendronhq ]; then echo "Clearing Existing Verdaccio Cache" && rm -Rf ~/.config/verdaccio/storage/@dendronhq; fi

      - name: Build the VSIX
        run: |
          yarn build:patch:local:ci

      - name: Upload VSIX Artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsix
          path: ./packages/plugin-core/*.vsix

      - name: Prepare Package Manifest
        run: |
          DENDRON_CLI=./packages/dendron-cli/lib/bin/dendron-cli.js
          LOG_LEVEL=info $DENDRON_CLI dev prep_plugin --extensionTarget nightly

      # yarn deploy:vscode (vsce publish) attempts to pull dependencies, so
      # verdaccio must be running
      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCODE_PUBLISH_PWD }}
        working-directory: ./packages/plugin-core
        run: |
          npx verdaccio > verdaccio.log  2>&1 &
          sleep 15
          echo "checking verdaccio log"
          cat verdaccio.log
          echo "Setting registry to local"
          yarn config set registry http://localhost:4873
          npm set registry http://localhost:4873/
          echo "running deploy:vscode"
          yarn deploy:vscode

      - name: Publish to Open VSX Marketplace
        env:
          OVSX_PAT: ${{ secrets.VSCODIUM_PUBLISH_PWD }}
        working-directory: ./packages/plugin-core
        run: |
          echo "Setting registry to local"
          yarn config set registry http://localhost:4873
          npm set registry http://localhost:4873/
          echo "running deploy:ovsx"
          yarn deploy:ovsx