@charset "UTF-8";

//
// Styles for rendered markdown in the .main-content container
//
// stylelint-disable selector-no-type, max-nesting-depth, selector-max-compound-selectors, selector-max-type

.main-content {
  line-height: $content-line-height;

  ol,
  ul,
  dl,
  pre,
  address,
  blockquote,
  .table-wrapper {
    margin-top: 0.5em;
  }

  a {
    overflow: hidden;
    text-overflow: ellipsis;
    // white-space: nowrap;
  }

  // For links to tag notes where we want to display a tag color.
  // The supports media query is to skip Internet Explorer, where
  // the `var()` is not supported (https://stackoverflow.com/a/48422293).
  @supports not (-ms-high-contrast: none) {
    .color-tag::before {
      // Need these to force the browser into rendering this empty box
      content: " ";
      display: inline-block;
      // The actual style of the tag color box
      width: 0.8rem;
      height: 0.8rem;
      border: 1px solid $body-text-color;
      margin: auto 0.2rem;
      background-color: var(--tag-color); // Set when generating the link
    }
  }

  ul,
  ol {
    padding-left: 1.5em;
  }

  li {
    .highlight {
      margin-top: $sp-1;
    }
  }

  ol {
    list-style-type: none;
    counter-reset: step-counter;

    > li {
      position: relative;

      &::before {
        position: absolute;
        top: 0.2em;
        left: -1.6em;
        color: $grey-dk-000;
        content: counter(step-counter);
        counter-increment: step-counter;
        @include fs-3;

        @include mq(sm) {
          top: 0.11em;
        }
      }

      ol {
        counter-reset: sub-counter;

        li {
          &::before {
            content: counter(sub-counter, lower-alpha);
            counter-increment: sub-counter;
          }
        }
      }
    }
  }

  ul {
    list-style: none;

    > li {
      &::before {
        position: absolute;
        margin-left: -1.4em;
        color: $grey-dk-000;
        content: "â€¢";
      }
    }
  }

  .task-list {
    padding-left: 0;
  }

  .task-list-item {
    align-items: center;

    &::before {
      content: "";
    }
  }

  .task-list-item-checkbox {
    margin-right: 0.6em;
  }

  hr + * {
    margin-top: 0;
  }

  h1:first-of-type {
    margin-top: 0.5em;
  }

  dl {
    display: grid;
    grid-template-columns: max-content 1fr;
  }

  dt,
  dd {
    margin: 0.25em 0;
  }

  dt {
    text-align: right;

    &::after {
      content: ":";
    }
  }

  dd {
    margin-left: 1em;
    font-weight: 500;
  }

  .anchor-heading {
    position: absolute;

    :not(.block-anchor) {
      // Breaks block anchors, making them extremely tall
      height: 100%;
    }

    right: -$sp-4;
    width: $sp-5;
    padding-right: $sp-1;
    padding-left: $sp-1;
    overflow: visible;

    @include mq(md) {
      right: auto;
      left: -$sp-5;
    }

    svg {
      display: inline-block;
      width: 100%;
      height: 100%;
      color: $link-color;
      visibility: hidden;
    }
  }

  // Otherwise anchor heading rules push these anchors too far left
  .anchor-heading.block-anchor {
    left: 0;
  }

  .anchor-heading:hover,
  h1:hover > .anchor-heading,
  h2:hover > .anchor-heading,
  h3:hover > .anchor-heading,
  h4:hover > .anchor-heading,
  h5:hover > .anchor-heading,
  h6:hover > .anchor-heading {
    svg {
      visibility: visible;
    }
  }

  *:hover > .block-anchor svg,
  table:hover .block-anchor svg  {
    visibility: visible;
  }

  summary {
    cursor: pointer;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    position: relative;
    margin-top: 1.5em;
    margin-bottom: 0.25em;

    &:first-child {
      margin-top: $sp-2;
    }

    + table,
    + .table-wrapper,
    + .code-example,
    + .highlighter-rouge {
      margin-top: 1em;
    }

    + p {
      margin-top: 0;
    }
  }
}
