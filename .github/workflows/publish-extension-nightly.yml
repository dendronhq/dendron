# This workflow will build the prerelease plugin and publish it to the VS Code
# Marketplace. This will NOT publish any packages to NPM. The plugin is also
# uploaded to AWS S3
name: Publish Extension - Nightly

# TODO: Switch to on push once testing is done.
# on: workflow_dispatch
on:
  push:
    branches:
      - chore/ga-build-automation
  #     - prerelease/*
  
jobs:
  build:
    environment: plugin-production
    strategy:
      fail-fast: true

    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - name: Gather environment data
        run: |
          node --version
          npm --version
          yarn --version

      - name: Configure Git user
        run: |
          git config --global user.name CI
          git config --global user.email ci@dendron.so

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version:  14.x

      - name: Yarn Setup
        run: yarn setup
      
      - name: Set Up Yarn Local Registry
        run: yarn config set registry http://localhost:4873
      
      - name: Set Up NPM Local Registry
        run: | 
          npm set registry http://localhost:4873/
          echo $NODE_OPTIONS
      
      - name: Build the VSIX
        env: 
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          echo "DENDRON_RELEASE_VERSION=`cat meta.json | jq -r '.["@dendronhq/plugin-core"]' | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{$NF=sprintf("%0*d", length($NF), ($NF+1)); print}'`" >> $GITHUB_ENV
          echo $NODE_OPTIONS
          yarn build:patch:local:ci

      - name: Upload VSIX Artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsix
          path: ./packages/plugin-core/*.vsix

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DENDRON_BOT_S3_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DENDRON_BOT_S3_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Publish VSIX to S3
        run: |
          version=`cat ./packages/plugin-core/package.json | jq ".version" -r`
          package="nightly-$version.vsix"
          echo $package
          BUCKET=org-dendron-public-assets
          aws s3 cp --acl public-read ./packages/plugin-core/$package s3://$BUCKET/publish/$package
          echo https://$BUCKET.s3.amazonaws.com/publish/$package

      - name: Create Package
        run: |
          DENDRON_CLI=./packages/dendron-cli/lib/bin/dendron-cli.js
          LOG_LEVEL=info $DENDRON_CLI dev prep_plugin --extensionTarget nightly
          LOG_LEVEL=info $DENDRON_CLI dev package_plugin

      - name: Publish to VS Code Marketplace
        env: 
          VSCE_PAT: ${{ secrets.VSCODE_PUBLISH_PWD }}
        working-directory: ./packages/plugin-core
        run: yarn deploy:vscode

      ## TODO: Check if additional setup is necessary on secrets.GITHUB_TOKEN; Check PR Title formatting
      - name: Raise Pull Request back to master
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "chore: Pulling prerelease/${{ env.DENDRON_RELEASE_VERSION }} into master"