// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GIVEN dendronPub WHEN inside note ref AND noteRef link THEN noteRef link is blank 1`] = `
VFile {
  "contents": "<h1 id=\\"gamma\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#gamma\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>Gamma</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Alpha</span></div>
<a href=\\"alpha\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p><a title=\\"Private\\" style=\\"color: brown\\" href=\\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\\" target=\\"_blank\\">Beta (Private)</a></p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs WHEN config sets enablePrettyRefs false AND note overrides to true THEN renders with pretty refs 1`] = `
VFile {
  "contents": "<h1 id=\\"with-override\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#with-override\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>With Override</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Bar</span></div>

</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar body</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs WHEN config sets enablePrettyRefs true AND note overrides to false THEN renders without pretty refs 1`] = `
VFile {
  "contents": "<h1 id=\\"with-override\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#with-override\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>With Override</h1>
<p></p><p></p><p>bar body</p><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs config.enablePrettyRef: false 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\">Foo</h1>
<p></p><p></p><p>bar body</p><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs config.enablePrettyRef: true 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\">Foo</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Bar</span></div>
<a href=\\"bar\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar body</p>
</div></div><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs config.publishing.enablePrettyRef: false 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#foo\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>Foo</h1>
<p></p><p></p><p>bar body</p><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"/notes/foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs config.publishing.enablePrettyRef: true 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#foo\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>Foo</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Bar</span></div>

</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar body</p>
</div></div><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"/notes/foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs enablePrettyRef defaults to true in both cases 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\">Foo</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Bar</span></div>
<a href=\\"bar\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar body</p>
</div></div><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub enablePrettyRefs enablePrettyRef defaults to true in both cases 2`] = `
VFile {
  "contents": "<h1 id=\\"foo\\"><a aria-hidden=\\"true\\" class=\\"anchor-heading\\" href=\\"#foo\\"><svg aria-hidden=\\"true\\" viewBox=\\"0 0 16 16\\"><use xlink:href=\\"#svg-link\\"></use></svg></a>Foo</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Bar</span></div>
<a href=\\"/notes/bar\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar body</p>
</div></div><p></p><p></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"/notes/foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags WHEN configured with useHashesForFMTags option THEN tags are rendered with a # symbol 1`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>
<hr>
<h2 id=\\"tags\\">Tags</h2>
<ol>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #9e3623;\\" href=\\"tags.first\\">#first</a></li>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #b1d1fc;\\" href=\\"tags.second\\">#second</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are not rendered when disabled 1`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are not rendered when missing 1`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has no fm tags</p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are rendered when available multiple tags 1`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>
<hr>
<h2 id=\\"tags\\">Tags</h2>
<ol>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #9e3623;\\" href=\\"tags.first\\">first</a></li>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #b1d1fc;\\" href=\\"tags.second\\">second</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are rendered when available multiple tags 2`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>
<hr>
<h2 id=\\"tags\\">Tags</h2>
<ol>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #9e3623;\\" href=\\"tags.first\\">first</a></li>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #b1d1fc;\\" href=\\"tags.second\\">second</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are rendered when available single tag 1`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>
<hr>
<h2 id=\\"tags\\">Tags</h2>
<ol>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #9e3623;\\" href=\\"tags.first\\">first</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub frontmatter tags are rendered when available single tag 2`] = `
VFile {
  "contents": "<h1 id=\\"fmtags\\">Fmtags</h1>
<p>has fm tags</p>
<hr>
<h2 id=\\"tags\\">Tags</h2>
<ol>
<li><a class=\\"color-tag\\" style=\\"--tag-color: #9e3623;\\" href=\\"tags.first\\">first</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub in IMPORT mode 1`] = `
VFile {
  "contents": "Testing publishing in IMPORT mode

",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference WHEN refs are back to back THEN render all 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo1</span></div>
<a href=\\"foo1\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p> <p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo2</span></div>
<a href=\\"foo2\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference WHEN refs are right on the next line THEN render all 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo1</span></div>
<a href=\\"foo1\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p>
<p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo2</span></div>
<a href=\\"foo2\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p>
<p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo3</span></div>
<a href=\\"foo3\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference assume vault 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo</span></div>
<a href=\\"foo\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>foo in vault2</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference basic 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo</span></div>
<a href=\\"foo\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference fail: ambiguous 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><blockquote>
Error rendering note reference. There are multiple notes with the name dupe. Please specify the vault prefix.
</blockquote><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference fail: wildcard no match 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><blockquote>
Error rendering note reference. There are no matches for \`baz.*\`.
</blockquote><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference fail: with vault prefix 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><blockquote>
No note with name bar found in vault vault2
</blockquote><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference nonexistent 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><blockquote>
No note with name bar found
</blockquote><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference ok: ambiguous but duplicateNoteBehavior set 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Dupe</span></div>
<a href=\\"dupe\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>dupe in vault1</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference ok: wildcard 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">One</span></div>
<a href=\\"bar.one\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar one</p>
</div></div><p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Two</span></div>
<a href=\\"bar.two\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar two</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference ok: wildcard 2`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">One</span></div>
<a href=\\"bar.one\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar one</p>
</div></div><p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Two</span></div>
<a href=\\"bar.two\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>bar two</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference ok: with vault prefix 1`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo</span></div>
<a href=\\"foo\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>foo in vault2</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub note reference ok: with vault prefix 2`] = `
VFile {
  "contents": "<h1 id=\\"ref\\">Ref</h1>
<p></p><p></p><div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\">
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">Foo</span></div>
<a href=\\"foo\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div><p>foo in vault2</p>
</div></div><p></p><p></p>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub prefix imagePrefix 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\">Foo</h1>
<p><img src=\\"image-url.jpg\\" alt=\\"alt-text\\"></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;

exports[`dendronPub prefix imagePrefix with forward slash 1`] = `
VFile {
  "contents": "<h1 id=\\"foo\\">Foo</h1>
<p><img src=\\"/image-url.jpg\\" alt=\\"alt-text\\"></p>
<hr>
<strong>Children</strong>
<ol>
<li><a href=\\"foo.ch1\\">Ch1</a></li>
</ol>",
  "cwd": "<PROJECT_ROOT>",
  "data": Object {},
  "history": Array [],
  "messages": Array [],
}
`;
