# Builds and publishes the release. This will publish packages to npm and
# publish the release extension to the VS Code and Open VSX Marketplaces. This
# is manually triggered once the release build is smoke-tested and ready for
# release.
name: Publish Extension - Dendron

on: workflow_dispatch

jobs:
  build:
    environment: plugin-production
    strategy:
      fail-fast: true

    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - name: Gather environment data
        run: |
          node --version
          npm --version
          yarn --version

      - name: Configure Git user
        run: |
          git config --global user.name github.actions
          git config --global user.email github-actions@github.com

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version:  14.x

      - name: Yarn Setup
        run: yarn setup

      - name: Set Environment Variables
        run: |
          echo "DENDRON_RELEASE_VERSION=`cat meta.json | jq -r '.["@dendronhq/plugin-core"]' | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{$NF=sprintf("%0*d", length($NF), ($NF+1)); print}'`" >> $GITHUB_ENV
          echo "GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}" >> $GITHUB_ENV
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV

      - name: Build the VSIX and Publish to NPM Registry
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_PWD: ${{ secrets.NPM_PWD }}
        run: |
          yarn build:minor:remote:ci

      - name: Upload VSIX Artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsix
          path: ./packages/plugin-core/*.vsix

      - name: Prepare Package Manifest
        run: |
          DENDRON_CLI=./packages/dendron-cli/lib/bin/dendron-cli.js
          LOG_LEVEL=info $DENDRON_CLI dev prep_plugin --extensionTarget dendron

      - name: Push Branch Commits to Github
        run: git push -u origin HEAD

      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCODE_PUBLISH_PWD }}
        working-directory: ./packages/plugin-core
        run: yarn deploy:vscode

      - name: Publish to Open VSX Marketplace
        env:
          OVSX_PAT: ${{ secrets.VSCODIUM_PUBLISH_PWD }}
        working-directory: ./packages/plugin-core
        run: yarn deploy:ovsx

      - name: Tag Release on Github
        run: | 
          git tag $DENDRON_RELEASE_VERSION
          git push origin $DENDRON_RELEASE_VERSION

      - name: Raise Pull Request back to master
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "chore: Pulling release/${{ env.DENDRON_RELEASE_VERSION }} into master"